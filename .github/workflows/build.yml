name: Multi-Platform PyInstaller Build

on:
  workflow_dispatch:
    inputs:
      release_name:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        include:
          - os: windows-latest
            artifact_name: windows
            ext: .exe
          - os: ubuntu-latest
            artifact_name: linux
            ext: ""
          - os: macos-latest
            artifact_name: macos
            ext: ""
    steps:
      - uses: actions/checkout@v3
        with:
          path: examples

      - name: Setup Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: 3.12  # 升级Python版本 [[2]][[10]]

      - name: Install dependencies
        run: pip install -r examples/requirements.txt  # 明确指定依赖路径 [[7]]

      - name: PyInstaller Build
        uses: sayyid5416/pyinstaller@v1  # 替换Action [[1]]
        with:
          script: examples/gallery.py
          onedir: false
          clean: true
          additional_args: >-
            --distpath examples/dist/${{ matrix.artifact_name }}
            --workpath examples/build/${{ matrix.artifact_name }}

      - name: Compress artifacts
        run: |
          cd examples/dist/${{ matrix.artifact_name }}
          7z a ../RinUi_Example_${{ matrix.artifact_name }}.zip *${{ matrix.ext }}  # 压缩文件 [[8]]

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: RinUi_Example_${{ matrix.artifact_name }}
          path: examples/dist/RinUi_Example_${{ matrix.artifact_name }}.zip

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ inputs.release_name }}
          release_name: ${{ inputs.release_name }}

      - name: Upload Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/RinUi_Example_*.zip
          asset_name: RinUi_Example_${{ inputs.release_name }}_${{ matrix.os }}
          asset_content_type: application/zip
